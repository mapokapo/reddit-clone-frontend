// This file is auto-generated by @hey-api/openapi-ts

export type CreateUserRequest = {
  name: string;
};

export type CreateCommunityRequest = {
  name: string;
  description: string;
};

export type Community = {
  id: number;
  name: string;
  description: string;
  createdAt: Date;
};

export type UpdateCommunityRequest = {
  name?: string;
  description?: string;
};

export type CreatePostRequest = {
  title: string;
  content: string;
};

export type Post = {
  id: number;
  title: string;
  content: string;
  votes: number;
  createdAt: Date;
  updatedAt: Date;
};

export type UpdatePostRequest = {
  title?: string;
  content?: string;
};

export type CreateUserData = {
  requestBody: CreateUserRequest;
};

export type CreateUserResponse = unknown;

export type CreateCommunityData = {
  requestBody: CreateCommunityRequest;
};

export type CreateCommunityResponse = unknown;

export type FindAllCommunitiesResponse = Array<Community>;

export type FindOneCommunityData = {
  id: number;
};

export type FindOneCommunityResponse = Community;

export type UpdateCommunityData = {
  id: number;
  requestBody: UpdateCommunityRequest;
};

export type UpdateCommunityResponse = void;

export type RemoveCommunityData = {
  id: number;
};

export type RemoveCommunityResponse = void;

export type JoinCommunityData = {
  id: number;
};

export type JoinCommunityResponse = void;

export type LeaveCommunityData = {
  id: number;
};

export type LeaveCommunityResponse = void;

export type CreatePostData = {
  communityId: number;
  requestBody: CreatePostRequest;
};

export type CreatePostResponse = unknown;

export type FindAllPostsData = {
  communityId: number;
};

export type FindAllPostsResponse = Array<Post>;

export type FindOnePostData = {
  communityId: number;
  id: number;
};

export type FindOnePostResponse = Post;

export type UpdatePostData = {
  communityId: number;
  id: number;
  requestBody: UpdatePostRequest;
};

export type UpdatePostResponse = void;

export type RemovePostData = {
  communityId: number;
  id: number;
};

export type RemovePostResponse = void;

export type UpvotePostData = {
  communityId: number;
  id: number;
};

export type UpvotePostResponse = void;

export type DownvotePostData = {
  communityId: number;
  id: number;
};

export type DownvotePostResponse = void;

export type UnvotePostData = {
  communityId: number;
  id: number;
};

export type UnvotePostResponse = void;

export type $OpenApiTs = {
  "/users": {
    post: {
      req: CreateUserData;
      res: {
        /**
         * User created
         */
        201: unknown;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
  };
  "/communities": {
    post: {
      req: CreateCommunityData;
      res: {
        /**
         * Created
         */
        201: unknown;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
    get: {
      res: {
        /**
         * OK
         */
        200: Array<Community>;
      };
    };
  };
  "/communities/{id}": {
    get: {
      req: FindOneCommunityData;
      res: {
        /**
         * OK
         */
        200: Community;
      };
    };
    patch: {
      req: UpdateCommunityData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
    delete: {
      req: RemoveCommunityData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
  };
  "/communities/{id}/join": {
    post: {
      req: JoinCommunityData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
  };
  "/communities/{id}/leave": {
    post: {
      req: LeaveCommunityData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
  };
  "/posts/{communityId}": {
    post: {
      req: CreatePostData;
      res: {
        /**
         * Created
         */
        201: unknown;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
    get: {
      req: FindAllPostsData;
      res: {
        /**
         * OK
         */
        200: Array<Post>;
      };
    };
  };
  "/posts/{communityId}/{id}": {
    get: {
      req: FindOnePostData;
      res: {
        /**
         * OK
         */
        200: Post;
      };
    };
    patch: {
      req: UpdatePostData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
    delete: {
      req: RemovePostData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
  };
  "/posts/{communityId}/{id}/upvote": {
    post: {
      req: UpvotePostData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
  };
  "/posts/{communityId}/{id}/downvote": {
    post: {
      req: DownvotePostData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
  };
  "/posts/{communityId}/{id}/unvote": {
    delete: {
      req: UnvotePostData;
      res: {
        /**
         * No content
         */
        204: void;
        /**
         * Unauthorized
         */
        401: unknown;
      };
    };
  };
};
